#
# Release workflow
#

name: Release
on:
  push:
    tags:
      - v*

jobs:
  code-build:
    permissions:
      contents: write
    strategy:
      matrix:
        go-version: [1.18.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checking out the code
        id: checkout-the-code
        uses: actions/checkout@v3

      - name: Set up Go
        id: setup-go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Go version
        id: go-version
        run: go version

      - name: Cache go modules
        id: cache-go-module
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Verify dependencies
        id: verify-dependencies
        run: go mod verify

      - name: Run golint
        id: run-golint
        uses: golangci/golangci-lint-action@v3

      - name: Build CLI
        id: build-cli
        run: |
          GOOS=linux GOARCH=amd64 go build -o ./build/linux/onqlave .
          GOOS=darwin GOARCH=amd64 go build -o ./build/darwin/onqlave .

      - name: Create Release
        id: create-release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          name: ${{ github.ref }}
          draft: false
          prerelease: false
          files: ./build/linux/onqlave